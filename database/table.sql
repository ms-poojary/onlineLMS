CREATE TABLE USERS(
     USER_ID INTEGER PRIMARY KEY,
      USERNAME VARCHAR(25),
      FULLNAME VARCHAR(20),
      EMAIL VARCHAR(30),
      USER_PASS VARCHAR(18),
      ROLE VARCHAR(10)
    );

CREATE TABLE DOMAIN(
    DOMAIN_ID INTEGER PRIMARY KEY,
    DOMAIN_NAME VARCHAR(20),
    DESCRIPTION VARCHAR(100),
    IMAGE VARCHAR(2000)
);

CREATE TABLE COURSE(
	DOMAIN_ID INTEGER,
    COURSE_ID INTEGER,
    COURSE_NAME VARCHAR(100),
    INST_ID INTEGER,
    CRS_IMG VARCHAR(2000),
    VEDIO VARCHAR(2000),
    DURATION VARCHAR(20),
    COURSE_DESC VARCHAR(1000),
    PRIMARY KEY(DOMAIN_ID ,COURSE_ID),
    FOREIGN KEY(DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID),
    FOREIGN KEY(INST_ID) REFERENCES USERS(USER_ID)
);                  

CREATE INDEX idx_course_id ON COURSE (COURSE_ID);

CREATE TABLE ENROLL(
	USER_ID INTEGER,
    DOMAIN_ID INTEGER,
    COURSE_ID INTEGER,
    ENROLL_DATE DATE,
    PRIMARY KEY (USER_ID, DOMAIN_ID,COURSE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    FOREIGN KEY (DOMAIN_ID) REFERENCES DOMAIN(DOMAIN_ID) ON DELETE CASCADE,
    FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE
);

CREATE TABLE QUESTIONS(
	 QUEST_ID INTEGER AUTO_INCREMENT PRIMARY KEY,
    QUEST_TEXT VARCHAR(2000)
);

CREATE TABLE ANSWERS(
    QUEST_ID INTEGER,
    OPTION_ID VARCHAR(5),
    OPTION_TEXT VARCHAR(2000),
    IS_CORRECT BOOLEAN,
    PRIMARY KEY(QUEST_ID, OPTION_ID),
    FOREIGN KEY (QUEST_ID) REFERENCES QUESTIONS(QUEST_ID) ON DELETE CASCADE
);

CREATE TABLE RESPONSE(
    RESPONSE_ID INTEGER AUTO_INCREMENT PRIMARY KEY,
    QUEST_ID INTEGER,
    USER_ID INTEGER,
    USER_CHOICE VARCHAR(5),
    FOREIGN KEY (QUEST_ID) REFERENCES QUESTIONS(QUEST_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

